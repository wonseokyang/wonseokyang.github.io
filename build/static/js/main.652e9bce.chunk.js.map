{"version":3,"sources":["redux/layout/constants.js","redux/appMenu/constants.js","redux/layout/actions.js","redux/auth/actions.js","helpers/authUtils.js","constants/layout.js","redux/appMenu/actions.js","components/Layout.js","routes/index.js","routes/Routes.js","helpers/fake-backend.js","App.js","serviceWorker.js","redux/layout/reducers.js","redux/auth/reducers.js","redux/appMenu/reducers.js","redux/reducers.js","helpers/api.js","redux/auth/saga.js","redux/layout/saga.js","redux/appMenu/utils.js","redux/appMenu/saga.js","redux/sagas.js","redux/store.js","index.js","redux/auth/constants.js"],"names":["__webpack_require__","d","__webpack_exports__","CHANGE_LAYOUT","CHANGE_LAYOUT_WIDTH","CHANGE_SIDEBAR_THEME","CHANGE_SIDEBAR_TYPE","INIT_MENU","INIT_MENU_SUCCESS","CHANGE_ACTIVE_MENU_FROM_LOCATION","CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS","changeLayoutWidth","changeSidebarTheme","changeSidebarType","_constants__WEBPACK_IMPORTED_MODULE_0__","width","type","payload","theme","sidebarType","loginUser","loginUserSuccess","loginUserFailed","registerUser","registerUserSuccess","registerUserFailed","logoutUser","forgetPassword","forgetPasswordSuccess","forgetPasswordFailed","username","password","LOGIN_USER","user","LOGIN_USER_SUCCESS","error","LOGIN_USER_FAILED","fullname","email","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","history","LOGOUT_USER","FORGET_PASSWORD","passwordResetStatus","FORGET_PASSWORD_SUCCESS","FORGET_PASSWORD_FAILED","isUserAuthenticated","getLoggedInUser","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","n","react_cookie__WEBPACK_IMPORTED_MODULE_1__","decoded","jwtDecode","token","currentTime","Date","now","exp","console","warn","Cookies","get","JSON","parse","LAYOUT_VERTICAL","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","LAYOUT_WIDTH_FLUID","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_LIGHT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","initMenu","initMenuSuccess","changeActiveMenuFromLocation","changeActiveMenuFromLocationSuccess","menuItems","activatedMenuItemIds","loading","react_default","a","createElement","AuthLayout","Loadable","loader","e","then","bind","render","loaded","props","Component","default","VerticalLayout","withLayout","WrappedComponent","HOC","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getLayout","layout","layoutType","inherits","createClass","key","value","Layout","react","fallback","connect","state","Login","React","lazy","Promise","all","Logout","Register","ForgetPassword","Confirm","ReportProducts","ReportOrders","ReportOrdersReturn","Cards","Buttons","Modals","Tabs","Notifications","Grid","General","Typography","Icons","Spinners","Widgets","BasicForms","FormValidation","FormAdvanced","FormWizard","FileUpload","Editors","ApexChart","BriteChart","ChartJs","BasicTables","AdvancedTables","GoogleMaps","PrivateRoute","_ref","component","roles","rest","objectWithoutProperties","react_router","assign","to","pathname","from","location","loggedInUser","indexOf","role","rootRoute","path","exact","route","reportRoutes","name","icon","children","authRoutes","Route","uiRoutes","formsRoutes","featuresRoutes","authProtectedRoutes","allFlattenRoutes","flattenRoutes","routes","flatRoutes","forEach","item","push","toConsumableArray","Routes","react_router_dom","map","index","users","id","firstName","lastName","realFetch","window","fetch","url","opts","resolve","reject","setTimeout","endsWith","method","params","body","filteredUsers","filter","responseJson","ok","json","_params$fullname$spli","split","newUser","message","headers","Authorization","response","configureFakeBackend","App","routes_Routes","Boolean","hostname","match","INIT_STATE","layoutConstants","layoutWidth","leftSideBarTheme","leftSideBarType","undefined","action","objectSpread","Auth","AppMenu","combineReducers","fetchJSON","options","status","catch","login","logout","register","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","setSession","cookies","set","stringify","remove","_ref$payload","regenerator_default","wrap","_context","prev","next","Content-Type","sent","put","t0","t1","abrupt","stop","_marked","_ref2","_context2","_marked2","_ref3","_ref3$payload","_context3","_marked3","_ref4","_context4","_marked4","_context5","takeEvery","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","fork","_marked9","changeLayout","changeLeftSidebarTheme","changeLeftSidebarType","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","LayoutSaga","changeBodyAttribute","attribute","document","setAttribute","changeLeftSidebarThemeAction","changeSidebarTypeAction","changeLayoutWidthAction","saga_marked","saga_marked2","saga_marked3","saga_marked4","saga_marked5","saga_marked6","saga_marked7","saga_marked8","saga_marked9","uuid","utils","assignIdAndParent","parentId","active","initMenuAndItems","watchMenuInit","watchMenuChange","appMenuSaga","getActivatedMenuItemIds","matchingItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","menuItem","err","return","assignIds","appMenu_saga_marked","appMenu_saga_marked2","appMenu_saga_marked3","appMenu_saga_marked4","appMenu_saga_marked5","rootSaga","getState","layoutSaga","sagas_marked","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","es","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.652e9bce.chunk.js","sourcesContent":["/* LAYOUT */\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\nexport const CHANGE_LAYOUT_WIDTH = 'CHANGE_LAYOUT_WIDTH';\nexport const CHANGE_SIDEBAR_THEME = 'CHANGE_SIDEBAR_THEME';\nexport const CHANGE_SIDEBAR_TYPE = 'CHANGE_SIDEBAR_TYPE';\n","/* APP MENU */\nexport const INIT_MENU = 'INIT_MENU';\nexport const INIT_MENU_SUCCESS = 'INIT_MENU_SUCCESS';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION = 'CHANGE_ACTIVE_MENU_FROM_LOCATION';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS = 'CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS';\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n} from './constants';\n\ntype LayoutAction = { type: string, payload?: string | null };\n\nexport const changeLayout = (layout: string): LayoutAction => ({\n    type: CHANGE_LAYOUT,\n    payload: layout,\n});\n\nexport const changeLayoutWidth = (width: string): LayoutAction => ({\n    type: CHANGE_LAYOUT_WIDTH,\n    payload: width,\n});\n\nexport const changeSidebarTheme = (theme: string): LayoutAction => ({\n    type: CHANGE_SIDEBAR_THEME,\n    payload: theme,\n});\n\nexport const changeSidebarType = (sidebarType: string): LayoutAction => ({\n    type: CHANGE_SIDEBAR_TYPE,\n    payload: sidebarType,\n});\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\ntype AuthAction = { type: string, payload: {} | string };\n\nexport const loginUser = (username: string, password: string): AuthAction => ({\n    type: LOGIN_USER,\n    payload: { username, password },\n});\n\nexport const loginUserSuccess = (user: string): AuthAction => ({\n    type: LOGIN_USER_SUCCESS,\n    payload: user,\n});\n\nexport const loginUserFailed = (error: string): AuthAction => ({\n    type: LOGIN_USER_FAILED,\n    payload: error,\n});\n\nexport const registerUser = (fullname: string, email: string, password: string): AuthAction => ({\n    type: REGISTER_USER,\n    payload: { fullname, email, password },\n});\n\nexport const registerUserSuccess = (user: {}): AuthAction => ({\n    type: REGISTER_USER_SUCCESS,\n    payload: user,\n});\n\nexport const registerUserFailed = (error: string): AuthAction => ({\n    type: REGISTER_USER_FAILED,\n    payload: error,\n});\n\nexport const logoutUser = (history: any): AuthAction => ({\n    type: LOGOUT_USER,\n    payload: { history },\n});\n\nexport const forgetPassword = (username: string): AuthAction => ({\n    type: FORGET_PASSWORD,\n    payload: { username },\n});\n\nexport const forgetPasswordSuccess = (passwordResetStatus: string): AuthAction => ({\n    type: FORGET_PASSWORD_SUCCESS,\n    payload: passwordResetStatus,\n});\n\nexport const forgetPasswordFailed = (error: string): AuthAction => ({\n    type: FORGET_PASSWORD_FAILED,\n    payload: error,\n});\n","// @flow\nimport jwtDecode from 'jwt-decode';\nimport { Cookies } from 'react-cookie';\n\n/**\n * Checks if user is authenticated\n */\nconst isUserAuthenticated = () => {\n    const user = getLoggedInUser();\n    if (!user) {\n        return false;\n    }\n    const decoded = jwtDecode(user.token);\n    const currentTime = Date.now() / 1000;\n    if (decoded.exp < currentTime) {\n        console.warn('access token expired');\n        return false;\n    } else {\n        return true;\n    }\n};\n\n/**\n * Returns the logged in user\n */\nconst getLoggedInUser = () => {\n    const cookies = new Cookies();\n    const user = cookies.get('user');\n    return user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\n};\n\nexport { isUserAuthenticated, getLoggedInUser };\n","/* Layout types and other constants */\n\nexport const LAYOUT_VERTICAL = 'vertical';\nexport const LAYOUT_HORIZONTAL = 'topnav';\nexport const LAYOUT_DETACHED = 'detached';\n\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\n\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\nexport const LEFT_SIDEBAR_THEME_LIGHT = 'light';\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\n\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\ntype DefaultMenuAction = { type: string, payload: {} };\n\nexport const initMenu = (): DefaultMenuAction => ({\n    type: INIT_MENU,\n    payload: {},\n});\n\nexport const initMenuSuccess = (menuItems: Array<{}>): DefaultMenuAction => ({\n    type: INIT_MENU_SUCCESS,\n    payload: { menuItems },\n});\n\nexport const changeActiveMenuFromLocation = (): DefaultMenuAction => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    payload: {},\n});\n\nexport const changeActiveMenuFromLocationSuccess = (activatedMenuItemIds: Array<string>): DefaultMenuAction => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n    payload: { activatedMenuItemIds },\n});\n","// @flow\nimport React, { Component, Suspense } from 'react';\nimport { connect } from 'react-redux';\n\nimport Loadable from 'react-loadable';\n\nimport { isUserAuthenticated } from '../helpers/authUtils';\n\n// Lazy loading and code splitting -\n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst loading = () => <div></div>;\n\n// All layouts/containers\nconst AuthLayout = Loadable({\n    loader: () => import('../layouts/Auth'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\nconst VerticalLayout = Loadable({\n    loader: () => import('../layouts/Vertical'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\n/**\n * Exports the component with layout wrapped to it\n * @param {} WrappedComponent\n */\nconst withLayout = (WrappedComponent: any) => {\n    type HOCProps = {\n        layout: { layoutType?: string },\n    };\n    const HOC = class extends Component<HOCProps> {\n        /**\n         * Returns the layout component based on different properties\n         */\n        getLayout = () => {\n            if (!isUserAuthenticated()) return AuthLayout;\n\n            let layoutCls = VerticalLayout;\n\n            switch (this.props.layout.layoutType) {\n                default:\n                    layoutCls = VerticalLayout;\n                    break;\n            }\n            return layoutCls;\n        };\n\n        render() {\n            const Layout = this.getLayout();\n            return (\n                <Suspense fallback={loading()}>\n                    <Layout {...this.props}>\n                        <WrappedComponent {...this.props} />\n                    </Layout>\n                </Suspense>\n            );\n        }\n    };\n\n    const mapStateToProps = state => {\n        return {\n            layout: state.Layout,\n        };\n    };\n\n    return connect(\n        mapStateToProps,\n        null\n    )(HOC);\n};\n\nexport default withLayout;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\n\nimport { isUserAuthenticated, getLoggedInUser } from '../helpers/authUtils';\n\n// lazy load all the views\n\n// auth\nconst Login = React.lazy(() => import('../pages/auth/Login'));\nconst Logout = React.lazy(() => import('../pages/auth/Logout'));\nconst Register = React.lazy(() => import('../pages/auth/Register'));\nconst ForgetPassword = React.lazy(() => import('../pages/auth/ForgetPassword'));\nconst Confirm = React.lazy(() => import('../pages/auth/Confirm'));\n// dashboard\n// const EcommerceDashboard = React.lazy(() => import('../pages/dashboards/Ecommerce'));\n// report\nconst ReportProducts = React.lazy(() => import('../pages/report/Products'));\nconst ReportOrders = React.lazy(() => import('../pages/report/Orders'));\nconst ReportOrdersReturn = React.lazy(() => import('../pages/report/OrdersReturn'));\n\n// uikit\nconst Cards = React.lazy(() => import('../pages/uikit/Cards'));\nconst Buttons = React.lazy(() => import('../pages/uikit/Buttons'));\nconst Modals = React.lazy(() => import('../pages/uikit/Modals'));\nconst Tabs = React.lazy(() => import('../pages/uikit/Tabs'));\nconst Notifications = React.lazy(() => import('../pages/uikit/Notifications'));\nconst Grid = React.lazy(() => import('../pages/uikit/Grid'));\nconst General = React.lazy(() => import('../pages/uikit/General'));\nconst Typography = React.lazy(() => import('../pages/uikit/Typography'));\nconst Icons = React.lazy(() => import('../pages/uikit/Icons'));\nconst Spinners = React.lazy(() => import('../pages/uikit/Spinners'));\nconst Widgets = React.lazy(() => import('../pages/uikit/Widgets'));\n// forms\nconst BasicForms = React.lazy(() => import('../pages/forms/Basic'));\nconst FormValidation = React.lazy(() => import('../pages/forms/Validation'));\nconst FormAdvanced = React.lazy(() => import('../pages/forms/Advanced'));\nconst FormWizard = React.lazy(() => import('../pages/forms/Wizard'));\nconst FileUpload = React.lazy(() => import('../pages/forms/FileUpload'));\nconst Editors = React.lazy(() => import('../pages/forms/Editors'));\n// charts\nconst ApexChart = React.lazy(() => import('../pages/charts/Apex'));\nconst BriteChart = React.lazy(() => import('../pages/charts/Brite'));\nconst ChartJs = React.lazy(() => import('../pages/charts/ChartJs'));\n// tables\nconst BasicTables = React.lazy(() => import('../pages/tables/Basic'));\nconst AdvancedTables = React.lazy(() => import('../pages/tables/Advanced'));\n// maps\nconst GoogleMaps = React.lazy(() => import('../pages/GoogleMaps'));\n\n// handle auth and authorization\n\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\n    <Route\n        {...rest}\n        render={props => {\n            if (!isUserAuthenticated()) {\n                // not logged in so redirect to login page with the return url\n                return <Redirect to={{ pathname: '/account/login', state: { from: props.location } }} />;\n            }\n\n            const loggedInUser = getLoggedInUser();\n            // check if route is restricted by role\n            if (roles && roles.indexOf(loggedInUser.role) === -1) {\n                // role not authorised so redirect to home page\n                return <Redirect to={{ pathname: '/' }} />;\n            }\n\n            // authorised so return component\n            return <Component {...props} />;\n        }}\n    />\n);\n\n// root routes\nconst rootRoute = {\n    path: '/',\n    exact: true,\n    component: () => <Redirect to=\"/report/productsExported\" />,\n    route: PrivateRoute,\n};\n\n// dashboards\n// const dashboardRoutes = {\n//     path: '/dashboard',\n//     name: 'Dashboard',\n//     icon: 'dripicons-meter',\n//     header: 'Navigation',\n//     component: EcommerceDashboard,\n//     route: PrivateRoute,\n// };\n\n//report\nconst reportRoutes = {\n    path: '/report',\n    name: 'Report',\n    icon: 'mdi mdi-note-multiple-outline',\n    children: [\n        {\n            path: '/report/productsExported',\n            name: 'Products Exported',\n            component: ReportProducts,\n            route: PrivateRoute,\n        },\n        {\n            path: '/report/ordersExported',\n            name: 'Orders Exported',\n            component: ReportOrders,\n            route: PrivateRoute,\n        },\n        {\n            path: '/report/ordersReturned',\n            name: 'Orders Returned',\n            component: ReportOrdersReturn,\n            route: PrivateRoute,\n        },\n    ],\n};\n\n// auth\nconst authRoutes = {\n    path: '/account',\n    name: 'Auth',\n    children: [\n        {\n            path: '/account/login',\n            name: 'Login',\n            component: Login,\n            route: Route,\n        },\n        {\n            path: '/account/logout',\n            name: 'Logout',\n            component: Logout,\n            route: Route,\n        },\n        {\n            path: '/account/register',\n            name: 'Register',\n            component: Register,\n            route: Route,\n        },\n        {\n            path: '/account/confirm',\n            name: 'Confirm',\n            component: Confirm,\n            route: Route,\n        },\n        {\n            path: '/account/forget-password',\n            name: 'Forget Password',\n            component: ForgetPassword,\n            route: Route,\n        },\n    ],\n};\n\n// ui\nconst uiRoutes = {\n    path: '/ui',\n    name: 'UI Kit',\n    icon: 'dripicons-briefcase',\n    children: [\n        {\n            path: '/ui/buttons',\n            name: 'Buttons',\n            component: Buttons,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/cards',\n            name: 'Cards',\n            component: Cards,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/general',\n            name: 'General',\n            component: General,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/grid',\n            name: 'Grid',\n            component: Grid,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/icons',\n            name: 'Icons',\n            component: Icons,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/modals',\n            name: 'Modals',\n            component: Modals,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/notifications',\n            name: 'Notifications',\n            component: Notifications,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/spinners',\n            name: 'Spinners',\n            component: Spinners,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/tabs',\n            name: 'Tabs',\n            component: Tabs,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/typography',\n            name: 'Typography',\n            component: Typography,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/widgets',\n            name: 'Widgets',\n            component: Widgets,\n            route: PrivateRoute,\n        },\n    ],\n};\n\n// forms\nconst formsRoutes = {\n    path: '/forms',\n    name: 'Forms',\n    icon: 'dripicons-document',\n    children: [\n        {\n            path: '/forms/basic',\n            name: 'Basic Elements',\n            component: BasicForms,\n            route: PrivateRoute,\n        },\n        {\n            path: '/forms/advanced',\n            name: 'Form Advanced',\n            component: FormAdvanced,\n            route: PrivateRoute,\n        },\n        {\n            path: '/forms/validation',\n            name: 'Form validation',\n            component: FormValidation,\n            route: PrivateRoute,\n        },\n        {\n            path: '/forms/wizard',\n            name: 'Form Wizard',\n            component: FormWizard,\n            route: PrivateRoute,\n        },\n        {\n            path: '/forms/upload',\n            name: 'File Upload',\n            component: FileUpload,\n            route: PrivateRoute,\n        },\n        {\n            path: '/forms/editors',\n            name: 'Editors',\n            component: Editors,\n            route: PrivateRoute,\n        },\n    ],\n};\n\n// other features\nconst featuresRoutes = {\n    path: '/features',\n    name: 'Features',\n    icon: 'dripicons-view-list-large',\n    children: [\n        {\n            path: '/features/charts',\n            name: 'Charts',\n            children: [\n                {\n                    path: '/features/charts/apex',\n                    name: 'Apex',\n                    component: ApexChart,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/features/charts/brite',\n                    name: 'Brite',\n                    component: BriteChart,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/features/charts/chartjs',\n                    name: 'Chartjs',\n                    component: ChartJs,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/features/tables',\n            name: 'Tables',\n            children: [\n                {\n                    path: '/features/tables/basic',\n                    name: 'Basic',\n                    component: BasicTables,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/features/tables/advanced',\n                    name: 'Advanced',\n                    component: AdvancedTables,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/features/googlemaps',\n            name: 'Google Maps',\n            component: GoogleMaps,\n            route: PrivateRoute,\n        },\n    ],\n};\n\n// flatten the list of all nested routes\nconst flattenRoutes = routes => {\n    let flatRoutes = [];\n\n    routes = routes || [];\n    routes.forEach(item => {\n        flatRoutes.push(item);\n\n        if (typeof item.children !== 'undefined') {\n            flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\n        }\n    });\n    return flatRoutes;\n};\n\n// All routes\nconst allRoutes = [\n    rootRoute,\n    reportRoutes,\n    authRoutes,\n    uiRoutes,\n    formsRoutes,\n    featuresRoutes,\n];\n\nconst authProtectedRoutes = [\n    reportRoutes,\n    uiRoutes,\n    formsRoutes, \n    featuresRoutes\n];\n\nconst allFlattenRoutes = flattenRoutes(allRoutes);\n\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };\n","import React from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\n\r\n// layout HOC\r\nimport withLayout from '../components/Layout';\r\nimport { allFlattenRoutes as routes } from './index';\r\n\r\nconst Routes = () => (\r\n    // rendering the router with layout\r\n    <BrowserRouter>\r\n        <Switch>\r\n            {routes.map((route, index) => {\r\n                return (\r\n                    !route.children && (\r\n                        <route.route\r\n                            key={index}\r\n                            path={route.path}\r\n                            roles={route.roles}\r\n                            exact={route.exact}\r\n                            component={withLayout(props => {\r\n                                return <route.component {...props} />;\r\n                            })}></route.route>\r\n                    )\r\n                );\r\n            })}\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;\r\n","export function configureFakeBackend() {\n    let users = [{ id: 1, username: 'test', password: 'test', firstName: 'Test', lastName: 'User', role: 'Admin' }];\n    let realFetch = window.fetch;\n    window.fetch = function(url, opts) {\n        return new Promise((resolve, reject) => {\n            // wrap in timeout to simulate server api call\n            setTimeout(() => {\n                // authenticate\n                if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\n                    // get parameters from post request\n                    let params = JSON.parse(opts.body);\n\n                    // find if any user matches login credentials\n                    let filteredUsers = users.filter(user => {\n                        return user.username === params.username && user.password === params.password;\n                    });\n\n                    if (filteredUsers.length) {\n                        // if login details are valid return user details and fake jwt token\n                        let user = filteredUsers[0];\n                        let responseJson = {\n                            id: user.id,\n                            username: user.username,\n                            firstName: user.firstName,\n                            lastName: user.lastName,\n                            role: 'Admin',\n                            token:\n                                'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJDb2RlcnRoZW1lIiwiaWF0IjoxNTU1NjgyNTc1LCJleHAiOjE1ODcyMTg1NzUsImF1ZCI6ImNvZGVydGhlbWVzLmNvbSIsInN1YiI6InRlc3QiLCJmaXJzdG5hbWUiOiJIeXBlciIsImxhc3RuYW1lIjoiVGVzdCIsIkVtYWlsIjoidGVzdEBoeXBlci5jb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4ifQ.8qHJDbs5nw4FBTr3F8Xc1NJYOMSJmGnRma7pji0YwB4',\n                        };\n                        resolve({ ok: true, json: () => responseJson });\n                    } else {\n                        // else return error\n                        reject('Username or password is incorrect');\n                    }\n                    return;\n                }\n\n                // register\n                if (url.endsWith('/users/register') && opts.method === 'POST') {\n                    // get parameters from post request\n                    let params = JSON.parse(opts.body);\n\n                    // add new users\n                    let { firstName, lastName } = params.fullname.split(' ');\n                    let newUser = {\n                        id: users.length + 1,\n                        username: firstName,\n                        password: params.password,\n                        firstName: firstName,\n                        lastName: lastName,\n                        role: 'Admin',\n                    };\n                    users.push({ newUser });\n\n                    let responseJson = {\n                        id: newUser.id,\n                        username: newUser.username,\n                        firstName: newUser.firstName,\n                        lastName: newUser.lastName,\n                        role: newUser.role,\n                        token:\n                            'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJDb2RlcnRoZW1lIiwiaWF0IjoxNTU1NjgyNTc1LCJleHAiOjE1ODcyMTg1NzUsImF1ZCI6ImNvZGVydGhlbWVzLmNvbSIsInN1YiI6InRlc3QiLCJmaXJzdG5hbWUiOiJIeXBlciIsImxhc3RuYW1lIjoiVGVzdCIsIkVtYWlsIjoidGVzdEBoeXBlci5jb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4ifQ.8qHJDbs5nw4FBTr3F8Xc1NJYOMSJmGnRma7pji0YwB4',\n                    };\n                    resolve({ ok: true, json: () => responseJson });\n                    return;\n                }\n\n                // forget password\n                if (url.endsWith('/users/password-reset') && opts.method === 'POST') {\n                    // get parameters from post request\n                    let params = JSON.parse(opts.body);\n\n                    // find if any user matches login credentials\n                    let filteredUsers = users.filter(user => {\n                        return user.username === params.username;\n                    });\n\n                    if (filteredUsers.length) {\n                        let responseJson = {\n                            message: \"We've sent you a link to reset password to your registered email.\",\n                        };\n                        resolve({ ok: true, json: () => responseJson });\n                    } else {\n                        // else return error\n                        reject('Sorry, we could not find any registered user with entered username');\n                    }\n                    return;\n                }\n\n                // get users\n                if (url.endsWith('/users') && opts.method === 'GET') {\n                    // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\n                    if (\n                        opts.headers &&\n                        opts.headers.Authorization ===\n                            'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJDb2RlcnRoZW1lIiwiaWF0IjoxNTU1NjgyNTc1LCJleHAiOjE1ODcyMTg1NzUsImF1ZCI6ImNvZGVydGhlbWVzLmNvbSIsInN1YiI6InRlc3QiLCJmaXJzdG5hbWUiOiJIeXBlciIsImxhc3RuYW1lIjoiVGVzdCIsIkVtYWlsIjoidGVzdEBoeXBlci5jb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4ifQ.8qHJDbs5nw4FBTr3F8Xc1NJYOMSJmGnRma7pji0YwB4'\n                    ) {\n                        resolve({ ok: true, json: () => users });\n                    } else {\n                        // return 401 not authorised if token is null or invalid\n                        reject('Unauthorised');\n                    }\n\n                    return;\n                }\n\n                // pass through any requests not handled above\n                realFetch(url, opts).then(response => resolve(response));\n            }, 500);\n        });\n    };\n}\n","// @flow\nimport React, { Component } from 'react';\nimport Routes from './routes/Routes';\n\n// setup fake backend\nimport { configureFakeBackend } from './helpers';\n\n// Themes\nimport './assets/scss/DefaultTheme.scss';\n\n// For Dark import DarkTheme.scss\n// import './assets/scss/DarkTheme.scss';\n\n// For green - import GreenTheme.scss\nimport './assets/scss/GreenTheme.scss';\n\n// configure fake backend\nconfigureFakeBackend();\n\ntype AppProps = {};\n\n/**\n * Main app component\n */\nclass App extends Component<AppProps> {\n    render() {\n        return <Routes></Routes>;\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n} from './constants';\n\nimport * as layoutConstants from '../../constants/layout';\n\nconst INIT_STATE = {\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT,\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\n};\n\ntype LayoutAction = { type: string, payload?: string | null };\ntype State = { +value?: boolean };\n\nconst Layout = (state: State = INIT_STATE, action: LayoutAction) => {\n    switch (action.type) {\n        case CHANGE_LAYOUT:\n            return {\n                ...state,\n                layoutType: action.payload,\n            };\n        case CHANGE_LAYOUT_WIDTH:\n            return {\n                ...state,\n                layoutWidth: action.payload,\n            };\n        case CHANGE_SIDEBAR_THEME:\n            return {\n                ...state,\n                leftSideBarTheme: action.payload,\n            };\n        case CHANGE_SIDEBAR_TYPE:\n            return {\n                ...state,\n                leftSideBarType: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default Layout;\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\nimport { getLoggedInUser } from '../../helpers/authUtils';\n\nconst INIT_STATE = {\n    user: getLoggedInUser(),\n    loading: false,\n};\n\ntype AuthAction = { type: string, payload: {} | string };\ntype State = { user?: {} | null, loading?: boolean, +value?: boolean };\n\nconst Auth = (state: State = INIT_STATE, action: AuthAction) => {\n    switch (action.type) {\n        case LOGIN_USER:\n            return { ...state, loading: true };\n        case LOGIN_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case LOGIN_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case REGISTER_USER:\n            return { ...state, loading: true };\n        case REGISTER_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case REGISTER_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case LOGOUT_USER:\n            return { ...state, user: null };\n        case FORGET_PASSWORD:\n            return { ...state, loading: true };\n        case FORGET_PASSWORD_SUCCESS:\n            return { ...state, passwordResetStatus: action.payload, loading: false, error: null };\n        case FORGET_PASSWORD_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        default:\n            return { ...state };\n    }\n};\n\nexport default Auth;\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\ntype Action = { type: string, payload: {} };\ntype State = { +value: boolean };\n\nconst AppMenu = (state: State = {}, action: Action) => {\n    switch (action.type) {\n        case INIT_MENU:\n            return action.payload;\n        case INIT_MENU_SUCCESS:\n            return { ...state, ...action.payload };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION:\n            return { ...state };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};\n\nexport default AppMenu;\n","// @flow\n\nimport { combineReducers } from 'redux';\nimport Layout from './layout/reducers';\nimport Auth from './auth/reducers';\nimport AppMenu from './appMenu/reducers';\n\nexport default combineReducers({\n    Auth,\n    AppMenu,\n    Layout,\n});\n","/**\n * Fetch data from given url\n * @param {*} url\n * @param {*} options\n */\nconst fetchJSON = (url, options = {}) => {\n    return fetch(url, options)\n        .then(response => {\n            if (!response.status === 200) {\n                throw response.json();\n            }\n            return response.json();\n        })\n        .then(json => {\n            return json;\n        })\n        .catch(error => {\n            throw error;\n        });\n};\n\nexport { fetchJSON };\n","// @flow\r\nimport { Cookies } from 'react-cookie';\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { fetchJSON } from '../../helpers/api';\r\n\r\nimport { LOGIN_USER, LOGOUT_USER, REGISTER_USER, FORGET_PASSWORD } from './constants';\r\n\r\nimport {\r\n    loginUserSuccess,\r\n    loginUserFailed,\r\n    registerUserSuccess,\r\n    registerUserFailed,\r\n    forgetPasswordSuccess,\r\n    forgetPasswordFailed,\r\n} from './actions';\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user\r\n */\r\nconst setSession = user => {\r\n    let cookies = new Cookies();\r\n    if (user) cookies.set('user', JSON.stringify(user), { path: '/' });\r\n    else cookies.remove('user', { path: '/' });\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* login({ payload: { username, password } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/authenticate', options);\r\n        setSession(response);\r\n        yield put(loginUserSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(loginUserFailed(message));\r\n        setSession(null);\r\n    }\r\n}\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0\r\n */\r\nfunction* logout({ payload: { history } }) {\r\n    try {\r\n        setSession(null);\r\n        yield call(() => {\r\n            history.push('/account/login');\r\n        });\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { fullname, email, password } }) {\r\n    const options = {\r\n        body: JSON.stringify({ fullname, email, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/register', options);\r\n        yield put(registerUserSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(registerUserFailed(message));\r\n    }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { username } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/password-reset', options);\r\n        yield put(forgetPasswordSuccess(response.message));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(forgetPasswordFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchLoginUser(): any {\r\n    yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchLogoutUser(): any {\r\n    yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser(): any {\r\n    yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword(): any {\r\n    yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga(): any {\r\n    yield all([fork(watchLoginUser), fork(watchLogoutUser), fork(watchRegisterUser), fork(watchForgetPassword)]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n} from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport {\r\n    changeLayoutWidth as changeLayoutWidthAction,\r\n    changeSidebarTheme as changeLeftSidebarThemeAction,\r\n    changeSidebarType as changeSidebarTypeAction,\r\n} from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------------------------------------------------------\r\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\r\n * For now, we are just applying the required logic on frontend side\r\n * ----------------------------------------------------------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_DETACHED) {\r\n            yield put(changeLayoutWidthAction(layoutConstants.LAYOUT_WIDTH_FLUID));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE));\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the layout width\r\n * @param {*} param0\r\n */\r\nfunction* changeLayoutWidth({ payload: width }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout-mode', width);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar theme\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarTheme({ payload: theme }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-theme', theme);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar type\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarType({ payload: type }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-compact-mode', type);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType(): any {\r\n    yield takeEvery(CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nexport function* watchChangeLayoutWidth(): any {\r\n    yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarTheme(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarType(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\r\n}\r\n\r\n\r\nfunction* LayoutSaga(): any {\r\n    yield all([\r\n        fork(watchChangeLayoutType),\r\n        fork(watchChangeLayoutWidth),\r\n        fork(watchChangeLeftSidebarTheme),\r\n        fork(watchChangeLeftSidebarType),\r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","// @flow\n\nimport MenuItem from './models';\n\n/**\n * Flatten the nested list of menu items\n */\nlet uuid = 1;\n\nconst assignIdAndParent = (menuItems: Array<MenuItem>, parentId?: number) => {\n    menuItems = menuItems || [];\n    menuItems.forEach(item => {\n        const id = item.id || uuid;\n        uuid += 1;\n        item.id = id;\n        item.parentId = item.parentId || parentId;\n        item.active = false;\n\n        if (typeof item.children !== 'undefined') {\n            assignIdAndParent(item.children, id);\n        }\n    });\n};\n\nexport default (menuItems: Array<MenuItem>) => {\n    assignIdAndParent(menuItems);\n    return menuItems;\n};\n","// @flow\r\nimport { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes as routes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = menuItems => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(initMenuSuccess(menuItems));\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit(): any {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange(): any {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga(): any {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;\r\n","// @flow\nimport { all } from 'redux-saga/effects';\nimport authSaga from './auth/saga';\nimport layoutSaga from './layout/saga';\nimport appMenuSaga from './appMenu/saga';\n\nexport default function* rootSaga(getState: any): any {\n    yield all([authSaga(), layoutSaga(), appMenuSaga()]);\n}\n","// @flow\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport sagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nexport function configureStore(initialState: {}) {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\n    sagaMiddleware.run(sagas);\n    return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { configureStore } from './redux/store';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* AUTH */\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';\n"],"sourceRoot":""}