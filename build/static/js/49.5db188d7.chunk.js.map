{"version":3,"sources":["components/FileUploader.js","pages/forms/FileUpload.js","components/PageTitle.js"],"names":["FileUploader","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleAcceptedFiles","files","_allFiles","allFiles","showPreview","map","file","assign","preview","split","URL","createObjectURL","formattedSize","formatBytes","size","state","selectedFiles","push","apply","toConsumableArray","setState","onFileUpload","bytes","decimals","arguments","length","undefined","dm","i","Math","floor","log","parseFloat","pow","toFixed","bind","assertThisInitialized","_this2","react_default","a","createElement","Fragment","es","onDrop","acceptedFiles","_ref","getRootProps","getInputProps","className","id","f","Card","key","Row","Col","data-dz-thumbnail","alt","name","src","type","react_router_dom","to","Component","defaultProps","FileUpload","PageTitle","breadCrumbItems","label","path","active","title","CardBody","components_FileUploader","console","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","item","index"],"mappings":"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","file":"static/js/49.5db188d7.chunk.js","sourcesContent":["// @flow\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card } from 'reactstrap';\nimport Dropzone from 'react-dropzone';\nimport PropTypes from 'prop-types';\n\ntype FileUploaderProps = {\n    onFileUpload?: PropTypes.func,\n    showPreview?: boolean,\n};\n\ntype FileUploaderState = {\n    selectedFiles: Array<PropTypes.object>,\n};\n\nclass FileUploader extends Component<FileUploaderProps, FileUploaderState> {\n    static defaultProps = {\n        showPreview: true,\n    };\n\n    constructor(props: FileUploaderProps) {\n        super(props);\n        this.handleAcceptedFiles = this.handleAcceptedFiles.bind(this);\n\n        this.state = {\n            selectedFiles: [],\n        };\n    }\n\n    /**\n     * Handled the accepted files and shows the preview\n     */\n    handleAcceptedFiles = (files: Array<PropTypes.object>) => {\n        var allFiles = files;\n\n        if (this.props.showPreview) {\n            files.map(file =>\n                Object.assign(file, {\n                    preview: file['type'].split('/')[0] === 'image' ? URL.createObjectURL(file) : null,\n                    formattedSize: this.formatBytes(file.size),\n                })\n            );\n\n            allFiles = this.state.selectedFiles;\n            allFiles.push(...files);\n            this.setState({ selectedFiles: allFiles });\n        }\n\n        if (this.props.onFileUpload) this.props.onFileUpload(allFiles);\n    };\n\n    /**\n     * Formats the size\n     */\n    formatBytes = (bytes: number, decimals: number = 2) => {\n        if (bytes === 0) return '0 Bytes';\n        const k = 1024;\n        const dm = decimals < 0 ? 0 : decimals;\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <Dropzone onDrop={acceptedFiles => this.handleAcceptedFiles(acceptedFiles)} {...this.props}>\n                    {({ getRootProps, getInputProps }) => (\n                        <div className=\"dropzone\">\n                            <div className=\"dz-message needsclick\" {...getRootProps()}>\n                                <input {...getInputProps()} />\n                                <i className=\"h1 text-muted dripicons-cloud-upload\"></i>\n                                <h3>Drop files here or click to upload.</h3>\n                                <span className=\"text-muted font-13\">\n                                    (This is just a demo dropzone. Selected files are <strong>not</strong> actually\n                                    uploaded.)\n                                </span>\n                            </div>\n                        </div>\n                    )}\n                </Dropzone>\n\n                {this.props.showPreview && (\n                    <div className=\"dropzone-previews mt-3\" id=\"file-previews\">\n                        {this.state.selectedFiles.map((f, i) => {\n                            return (\n                                <Card\n                                    className=\"mt-1 mb-0 shadow-none border dz-processing dz-image-preview dz-success dz-complete\"\n                                    key={i + '-file'}>\n                                    <div className=\"p-2\">\n                                        <Row className=\"align-items-center\">\n                                            {f.preview && (\n                                                <Col className=\"col-auto\">\n                                                    <img\n                                                        data-dz-thumbnail=\"\"\n                                                        className=\"avatar-sm rounded bg-light\"\n                                                        alt={f.name}\n                                                        src={f.preview}\n                                                    />\n                                                </Col>\n                                            )}\n                                            {!f.preview && (\n                                                <Col className=\"col-auto\">\n                                                    <div className=\"avatar-sm\">\n                                                        <span className=\"avatar-title bg-primary rounded\">\n                                                            {f.type.split('/')[0]}\n                                                        </span>\n                                                    </div>\n                                                </Col>\n                                            )}\n                                            <Col className=\"pl-0\">\n                                                <Link to=\"#\" className=\"text-muted font-weight-bold\">\n                                                    {f.name}\n                                                </Link>\n                                                <p className=\"mb-0\">\n                                                    <strong>{f.formattedSize}</strong>\n                                                </p>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                </Card>\n                            );\n                        })}\n                    </div>\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default FileUploader;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Card, CardBody } from 'reactstrap';\n\nimport PageTitle from '../../components/PageTitle';\nimport FileUploader from '../../components/FileUploader';\n\nconst FileUpload = () => {\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Forms', path: '/forms/upload' },\n                    { label: 'Form Upload', path: '/forms/upload', active: true },\n                ]}\n                title={'Form Upload'}\n            />\n\n            <Row>\n                <Col>\n                    <Card>\n                        <CardBody>\n                            <h4 className=\"header-title mb-3\">Dropzone File Upload</h4>\n\n                            <p className=\"text-muted font-13 m-b-30\">\n                                DropzoneJS is an open source library that provides drag’n’drop file uploads with image\n                                previews.\n                            </p>\n\n                            <FileUploader\n                                onFileUpload={files => {\n                                    console.log(files);\n                                }}\n                            />\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default FileUpload;\n","// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\ntype PageTitleProps = {\n    breadCrumbItems: PropTypes.object,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to=\"/\">Gomisa</Link>\n                            </BreadcrumbItem>\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <BreadcrumbItem active key={index}>\n                                        {item.label}\n                                    </BreadcrumbItem>\n                                ) : (\n                                    <BreadcrumbItem key={index}>\n                                        <Link to={item.path}>{item.label}</Link>\n                                    </BreadcrumbItem>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n"],"sourceRoot":""}