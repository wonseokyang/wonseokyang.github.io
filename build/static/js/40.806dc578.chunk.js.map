{"version":3,"sources":["components/Datepicker.js","pages/forms/Advanced.js","components/PageTitle.js"],"names":["DatepickerInput","props","_this","Object","_Users_gomidev_Documents_Projects_Gomi_gomisa_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_gomidev_Documents_Projects_Gomi_gomisa_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_gomidev_Documents_Projects_Gomi_gomisa_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","onDateValueChange","console","log","bind","_Users_gomidev_Documents_Projects_Gomi_gomisa_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","type","className","id","onClick","value","onChange","Component","DatepickerInputWithAddon","readOnly","style","cursor","HyperDatepicker","_this2","handleDateSelectChange","date","setState","startDate","showDataByDate","state","subDays","Date","input","hideAddon","react_datepicker__WEBPACK_IMPORTED_MODULE_8__","assign","customInput","selected","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","react_select__WEBPACK_IMPORTED_MODULE_5__","react_bootstrap_typeahead__WEBPACK_IMPORTED_MODULE_6__","react_text_mask__WEBPACK_IMPORTED_MODULE_9__","react_text_mask__WEBPACK_IMPORTED_MODULE_9___default","_components_Datepicker__WEBPACK_IMPORTED_MODULE_10__","_components_PageTitle__WEBPACK_IMPORTED_MODULE_11__","ReactSelect","href","classNamePrefix","options","label","isMulti","Typeaheads","labelKey","multiple","placeholder","DatePickers","lg","monthsShown","dateFormat","minDate","maxDate","setDate","getDate","showTimeSelect","timeFormat","timeIntervals","timeCaption","showTimeSelectOnly","InputMasks","mask","FormAdvanced","Fragment","breadCrumbItems","path","active","title","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","PageTitle","to","map","item","index","key"],"mappings":"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","file":"static/js/40.806dc578.chunk.js","sourcesContent":["// @flow\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport DatePicker from 'react-datepicker';\nimport subDays from \"date-fns/subDays\";\n\ntype DatepickerInputProps = {\n    onClick?: PropTypes.func,\n    value?: string,\n};\nclass DatepickerInput extends Component<DatepickerInputProps> {\n    constructor(props) {\n        super(props);\n\n        this.onDateValueChange = this.onDateValueChange.bind(this);\n    }\n\n    onDateValueChange = () => {\n        console.log('date value changed');\n    };\n    render() {\n        return (\n            <input\n                type=\"text\"\n                className=\"form-control date\"\n                id=\"dash-daterange\"\n                onClick={this.props.onClick}\n                value={this.props.value}\n                onChange={this.onDateValueChange}\n            />\n        );\n    }\n}\n\ntype DatepickerInputWithAddonProps = {\n    onClick?: PropTypes.func,\n    value?: string,\n};\n\nclass DatepickerInputWithAddon extends Component<DatepickerInputWithAddonProps> {\n    render() {\n        return (\n            <div className=\"input-group\">\n                <input\n                    type=\"text\"\n                    className=\"form-control form-control-light\"\n                    id=\"dash-daterange\"\n                    onClick={this.props.onClick}\n                    value={this.props.value}\n                    readOnly\n                />\n\n                <div className=\"input-group-append\" style={{ cursor: 'pointer' }}>\n                    <span className=\"input-group-text bg-primary border-primary text-white\">\n                        <i className=\"mdi mdi-calendar-range font-13\"></i>\n                    </span>\n                </div>\n            </div>\n        );\n    }\n}\n\ntype HyperDatepickerProps = {\n    hideAddon?: boolean,\n};\n\ntype HyperDatepickerState = {\n    startDate?: Date,\n};\n\nclass HyperDatepicker extends Component<HyperDatepickerProps, HyperDatepickerState> {\n    constructor(props: HyperDatepickerProps) {\n        super(props);\n        this.state = {\n            startDate: subDays(new Date(), 1),\n        };\n        this.handleDateSelectChange = this.handleDateSelectChange.bind(this);\n    }\n\n    handleDateSelectChange = (date: any) => {\n        this.setState({\n            startDate: date,\n        });\n        this.props.showDataByDate(date);\n    };\n\n    render() {\n        const input = (this.props.hideAddon || false) === true ? <DatepickerInput /> : <DatepickerInputWithAddon />;\n\n        return (\n            <DatePicker\n                customInput={input}\n                selected={this.state.startDate}\n                onChange={this.handleDateSelectChange}\n                {...this.props}\n            />\n        );\n    }\n}\n\nexport default HyperDatepicker;\n","// @flow\nimport React from 'react';\n\nimport { Row, Col, Card, CardBody } from 'reactstrap';\nimport Select from 'react-select';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport 'react-bootstrap-typeahead/css/Typeahead-bs4.css';\nimport MaskedInput from 'react-text-mask';\n\nimport HyperDatepicker from '../../components/Datepicker';\nimport PageTitle from '../../components/PageTitle';\n\nconst ReactSelect = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">\n                    <a href=\"https://github.com/JedWatson/react-select\">React select</a>\n                </h4>\n                <p className=\"mb-1 mt-3 font-weight-bold text-muted\">Single Selection</p>\n                <p className=\"text-muted font-14\">React-Select based Select element</p>\n                <Select\n                    className=\"react-select\"\n                    classNamePrefix=\"react-select\"\n                    options={[\n                        { value: 'chocolate', label: 'Chocolate' },\n                        { value: 'strawberry', label: 'Strawberry' },\n                        { value: 'vanilla', label: 'Vanilla' },\n                    ]}></Select>\n\n                <p className=\"mb-1 mt-3 font-weight-bold text-muted\">Multiple Selection</p>\n                <p className=\"text-muted font-14\">React-Select based Select (Multiple) element</p>\n                <Select\n                    isMulti={true}\n                    options={[\n                        { value: 'chocolate', label: 'Chocolate' },\n                        { value: 'strawberry', label: 'Strawberry' },\n                        { value: 'vanilla', label: 'Vanilla' },\n                    ]}\n                    className=\"react-select\"\n                    classNamePrefix=\"react-select\"></Select>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst Typeaheads = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">\n                    <a href=\"http://ericgio.github.io/react-bootstrap-typeahead/\">Typeahead</a>\n                </h4>\n                <p className=\"mb-1 mt-3 font-weight-bold text-muted\">Single Selection</p>\n                <p className=\"text-muted font-14\">Typeahead based Select element</p>\n                <Typeahead\n                    id=\"select2\"\n                    labelKey=\"label\"\n                    multiple={false}\n                    options={[\n                        { id: 1, value: 'chocolate', label: 'Chocolate' },\n                        { id: 2, value: 'strawberry', label: 'Strawberry' },\n                        { id: 3, value: 'vanilla', label: 'Vanilla' },\n                    ]}\n                    placeholder=\"Choose a state...\"\n                />\n\n                <p className=\"mb-1 mt-3 font-weight-bold text-muted\">Multiple Selection</p>\n                <p className=\"text-muted font-14\">Typeahead based Select (Multiple) element</p>\n                <Typeahead\n                    id=\"select3\"\n                    labelKey=\"label\"\n                    multiple={true}\n                    options={[\n                        { id: 1, value: 'chocolate', label: 'Chocolate' },\n                        { id: 2, value: 'strawberry', label: 'Strawberry' },\n                        { id: 3, value: 'vanilla', label: 'Vanilla' },\n                    ]}\n                    placeholder=\"Choose a state...\"\n                />\n            </CardBody>\n        </Card>\n    );\n};\n\nconst DatePickers = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Date &amp; Time Picker</h4>\n                <p className=\"text-muted font-14\">\n                    A simple date picker using <a href=\"https://reactdatepicker.com/\">ReactJS Datepicker</a>\n                </p>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Single Date</label> <br />\n                            <HyperDatepicker hideAddon={true} />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Single Date with multiple months</label> <br />\n                            <HyperDatepicker hideAddon={true} monthsShown={2} />\n                        </div>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Custom date format</label> <br />\n                            <HyperDatepicker hideAddon={true} dateFormat=\"yyyy-MM-dd\" />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Specific date range</label> <br />\n                            <HyperDatepicker\n                                hideAddon={true}\n                                minDate={new Date()}\n                                maxDate={new Date(new Date().setDate(new Date().getDate() + 7))}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Select Time</label> <br />\n                            <HyperDatepicker\n                                hideAddon={true}\n                                showTimeSelect\n                                timeFormat=\"HH:mm\"\n                                timeIntervals={60}\n                                dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                timeCaption=\"time\"\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Time only</label> <br />\n                            <HyperDatepicker\n                                hideAddon={true}\n                                showTimeSelect\n                                showTimeSelectOnly\n                                timeIntervals={60}\n                                dateFormat=\"h:mm aa\"\n                                timeCaption=\"Time\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst InputMasks = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title\">Input Masks</h4>\n                <p className=\"text-muted font-14\">\n                    Input masks by{' '}\n                    <a href=\"https://github.com/text-mask/text-mask/tree/master/react#readme\">react-text-mask</a>\n                </p>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Phone Number with Area Code</label> <br />\n                            <MaskedInput\n                                mask={[\n                                    '(',\n                                    /[1-9]/,\n                                    /\\d/,\n                                    ')',\n                                    ' ',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    '-',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                ]}\n                                placeholder=\"(__) ____-____\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>US Phone Number</label> <br />\n                            <MaskedInput\n                                mask={[\n                                    '(',\n                                    /[1-9]/,\n                                    /\\d/,\n                                    /\\d/,\n                                    ')',\n                                    ' ',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    '-',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                ]}\n                                placeholder=\"(___) ___-____\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Date</label> <br />\n                            <MaskedInput\n                                mask={[/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/]}\n                                placeholder=\"__/__/____\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Time</label> <br />\n                            <MaskedInput\n                                mask={[/\\d/, /\\d/, ':', /\\d/, /\\d/, ':', /\\d/, /\\d/]}\n                                placeholder=\"__:__:__\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst FormAdvanced = () => {\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Forms', path: '/forms/advanced' },\n                    { label: 'Form Advanced', path: '/forms/advanced', active: true },\n                ]}\n                title={'Form Advanced'}\n            />\n\n            <Row>\n                <Col lg={6}>\n                    <ReactSelect />\n                </Col>\n                <Col lg={6}>\n                    <Typeaheads />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <DatePickers />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <InputMasks />\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default FormAdvanced;\n","// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\ntype PageTitleProps = {\n    breadCrumbItems: PropTypes.object,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to=\"/\">Gomisa</Link>\n                            </BreadcrumbItem>\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <BreadcrumbItem active key={index}>\n                                        {item.label}\n                                    </BreadcrumbItem>\n                                ) : (\n                                    <BreadcrumbItem key={index}>\n                                        <Link to={item.path}>{item.label}</Link>\n                                    </BreadcrumbItem>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n"],"sourceRoot":""}